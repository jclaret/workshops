- import_tasks: ami_find_security.yml

##############Check Point CloudGuard IaaS Security Management##############
- name: Create EC2 instances for Check Point CloudGuard Security Management
  ec2:
    assign_public_ip: yes
    key_name: "{{ ec2_name_prefix }}-key"
    group: "{{ ec2_security_group }}"
    instance_type: "{{ec2_info[checkpoint].size }}"
    image: "{{ec2_info[checkpoint].ami.image_id}}"
    region: "{{ ec2_region }}"
    exact_count: "{{ student_total }}"
    user_data: ''
    count_tag:
      Workshop_security: "{{ec2_name_prefix}}-security"
    wait: "{{ ec2_wait }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
  register: checkpoint_output

- name: Ensure tags are present for Check Point CloudGuard Security Management node (SECURITY MODE)
  ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{item.1}}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{item.0 + 1}}-checkpoint"
      Workshop_rtr3: "{{ec2_name_prefix}}-checkpoint"
      Workshop: "{{ec2_name_prefix}}"
      Index: "{{ item[0] }}"
      Student: "student{{item.0 + 1}}"
      AWS_USERNAME: "{{ linklight_user }}"
      Info: "AWS_USERNAME that provisioned this-> {{ linklight_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{student_total}}"
      short_name: "checkpoint"
      username: "{{ec2_info[checkpoint].username}}"
  with_indexed_items:
    - "{{ rtr3_output.instance_ids }}"
  when: rtr3_output.instance_ids is not none
